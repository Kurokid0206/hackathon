# Generated by Django 4.0.4 on 2022-11-26 06:38

import ckeditor_uploader.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('hackathon', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=250)),
                ('fullname', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=150)),
                ('message', models.TextField()),
                ('status', models.CharField(choices=[('c', 'Created'), ('i', 'In Progress'), ('d', 'Done')], default='c', max_length=1)),
                ('create_date', models.DateField(auto_now_add=True, null=True)),
                ('edit_date', models.DateTimeField(auto_now=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'contact',
                'managed': True,
            },
        ),
        migrations.AlterModelOptions(
            name='garbage',
            options={'managed': True},
        ),
        migrations.AlterModelOptions(
            name='userprofile',
            options={'managed': True},
        ),
        migrations.AddField(
            model_name='garbage',
            name='description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='garbage',
            name='image',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='garbage',
            name='is_enable',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='garbage',
            name='point',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='address',
            field=models.CharField(blank=True, max_length=30, null=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='avatar',
            field=models.CharField(blank=True, default='/static/home/images/author.jpg', max_length=250, null=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='bio',
            field=ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='create_date',
            field=models.DateField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='date_of_birth',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='email',
            field=models.EmailField(blank=True, max_length=250, null=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='first_name',
            field=models.CharField(default='', max_length=50),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='userprofile',
            name='is_active',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='is_enable',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='last_name',
            field=models.CharField(default='demo', max_length=50),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='userprofile',
            name='phone',
            field=models.CharField(blank=True, max_length=30, null=True),
        ),
        migrations.AlterModelTable(
            name='garbage',
            table='Garbage',
        ),
        migrations.AlterModelTable(
            name='userprofile',
            table='user_profile',
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image', models.CharField(max_length=100)),
                ('price', models.IntegerField()),
                ('is_enabled', models.BooleanField(default=True)),
                ('description', models.TextField()),
                ('user_product', models.ManyToManyField(to='hackathon.userprofile')),
            ],
            options={
                'db_table': 'product',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('photo', models.CharField(blank=True, max_length=250, null=True)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('status', models.CharField(choices=[('d', 'Draft'), ('p', 'Published')], default='d', max_length=1)),
                ('views', models.PositiveIntegerField(default=0)),
                ('slug', models.SlugField(blank=True, max_length=250, null=True, unique=True)),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('edited_date', models.DateTimeField(blank=True, null=True)),
                ('is_enable', models.BooleanField(blank=True, default=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='hackathon.userprofile')),
            ],
            options={
                'db_table': 'blog',
                'ordering': ['-created_date'],
                'managed': True,
            },
        ),
    ]
